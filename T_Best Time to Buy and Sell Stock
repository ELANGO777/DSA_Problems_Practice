You are given an array prices where prices[i] is the price of a given stock on the ith day.

You want to maximize your profit by choosing a single day to buy one stock and choosing a different day in the future to sell that stock.

Return the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0.

===============================================================

public class MaxProfitStocks {
    public static int maxProfit(int[] prices) {
        if (prices == null || prices.length < 2) return 0;

        int minPrice = prices[0]; // Track the minimum price to buy
        int maxProfit = 0; // Track maximum profit

        for (int i = 1; i < prices.length; i++) {
            // Update minimum price when a lower price is found
            minPrice = Math.min(minPrice, prices[i]);

            // Calculate profit if selling at current price
            maxProfit = Math.max(maxProfit, prices[i] - minPrice);
        }

        return maxProfit; // Maximum profit achievable
    }

    public static void main(String[] args) {
        int[] prices = {7, 1, 5, 3, 6, 4}; // Example stock prices
        System.out.println("Maximum Profit: " + maxProfit(prices)); // Output: 5
    }
}
